previewsEnabled: true
databases:
  - name: rails7-example 
    databaseName: rails7example
    user: rails7example
    postgresMajorVersion: 14

services:
  - type: web
    name: rails7-example
    env: docker
    # buildCommand: "./bin/render-build.sh"
    # startCommand: "bundle exec puma -C config/puma.rb"
    # healthCheckPath: /
    autoDeploy: true
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: rails7-example
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: rails7-redis
          type: redis
          property: connectionString
      - key: SECRET_KEY_BASE
        generateValue: true
      - key: RAILS_SERVE_STATIC_FILES
        value: true
      - key: RAILS_LOG_TO_STDOUT
        value: true

  - type: worker
    name: rails7-worker
    env: docker
    dockerCommand: bundle exec sidekiq
    # buildCommand: "./bin/render-build.sh"
    # startCommand: "bundle exec puma -C config/puma.rb"
    # healthCheckPath: /
    autoDeploy: true
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: rails7-example
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: rails7-redis
          type: redis
          property: connectionString
      - key: SECRET_KEY_BASE
        generateValue: true
      - key: RAILS_SERVE_STATIC_FILES
        value: true
      - key: RAILS_LOG_TO_STDOUT
        value: true

  - type: redis
    name: rails7-redis
    ipAllowList: []
    plan: free # optional (defaults to starter)
